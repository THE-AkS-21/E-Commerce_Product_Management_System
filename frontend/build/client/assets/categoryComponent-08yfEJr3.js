import{a as s}from"./chunk-D4RADZKF-CEFUjEjZ.js";import{l as r,a as i,d as n}from"./utils-mUqetfhN.js";import{a as d}from"./axiosAuthInterceptor-pnhKdU3P.js";const y="http://backend:5000Category",u=async()=>{r("getAllCategories","Fetching all categories");try{const t=await i.get(`${y}/Get`);return r("getAllCategories → Response",t.data),await n(300),t.data}catch(t){throw console.error("Error fetching categories:",t),t}},C=async()=>{r("getCategoriesCount","Fetching category count");try{const t=await i.get(`${y}/Get/count`);return r("getCategoriesCount → Response",t.data),await n(300),t.data}catch(t){throw console.error("Error fetching category count:",t),t}},h=async t=>{r("getCategoryName",`Fetching category name for ID: ${t}`);try{const e=await i.get(`${y}/${t}/name`);return r("getCategoryName → Response",e.data),await n(300),e.data}catch(e){throw console.error("Error fetching category name:",e),e}},w=async t=>{r("addCategory",t);try{const e=await d.post(`${y}/Add`,t);return r("addCategory → Response",e.data),await n(300),e.data}catch(e){throw console.error("Error adding category:",e),e}},p=async(t,e)=>{r("updateCategoryById",{categoryId:t,categoryData:e});try{const a=await d.put(`${y}/Update-by-ID/${t}`,e);return r("updateCategoryById → Response",a.data),await n(300),a.data}catch(a){throw console.error("Error updating category:",a),a}},f=async t=>{r("deleteCategoryById",`Deleting category with ID: ${t}`);try{const e=await d.delete(`${y}/Delete-by-ID/${t}`);return r("deleteCategoryById → Response",e.data),await n(300),e.data}catch(e){throw console.error("Error deleting category:",e),e}},m="http://backend:5000Category",S=()=>{const[t,e]=s.useState(0);return s.useEffect(()=>{(async()=>{const o=await C();e(o.totalCategories)})()},[]),console.log("Current category count:",t),t},A=async t=>{try{const e=await i.get(`${m}/${t}/name`);return console.log("API RESPONSE:",e),e.data}catch(e){throw console.error("Error fetching category name by ID:",e),e}},I=t=>{const[e,a]=s.useState(""),[o,c]=s.useState(null);return s.useEffect(()=>{t&&(async()=>{try{const l=await h(t);console.log("Fetched category name:",l),await n(300),a(l)}catch(l){console.error("Error fetching category name:",l),c("Failed to load category")}})()},[t]),{categoryName:e,error:o}},R=()=>{const[t,e]=s.useState([]),[a,o]=s.useState(null);return s.useEffect(()=>{(async()=>{try{const g=await u();console.log("Fetched categories:",g),await n(300),e(g)}catch(g){console.error("Error loading categories:",g),o("Failed to load categories")}})()},[]),{categories:t,error:a}},B=()=>{const[t,e]=s.useState(!1);return{updateCategory:async(o,c)=>{e(!0);try{const g=await p(o,c);return console.log(`Updated category ${o}:`,g),await n(300),g}finally{e(!1)}},loading:t}},D=()=>{const[t,e]=s.useState(!1);return{deleteCategory:async o=>{e(!0);try{const c=await f(o);return console.log(`Deleted category ${o}:`,c),await n(300),c}finally{e(!1)}},loading:t}},F=()=>{const[t,e]=s.useState(!1);return{addNewCategory:async o=>{e(!0);try{const c=await w(o);return console.log("Added new category:",c),await n(300),c}finally{e(!1)}},loading:t}};export{S as C,B as a,D as b,F as c,I as d,A as g,R as u};
